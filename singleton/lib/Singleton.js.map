{"version":3,"file":"Singleton.js","sourceRoot":"","sources":["../src/Singleton.ts"],"names":[],"mappings":"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","sourcesContent":["/// <reference lib=\"es2015.iterable\" />\n/// <reference lib=\"es2021.weakref\" />\n\nimport { Ctor, Func } from '@rhom6us/func';\nimport { KindaWeakMap } from '@rhom6us/kinda-weak-map';\n\n\n// export function Singleton<T extends Ctor>(ctor: T): T {\n//     return class Singleton extends ctor {\n//         static #instance?: WeakRef<Singleton>;\n//         constructor(...args: any[]) {\n//             const value = Singleton.#instance?.deref();\n//             if (value) {\n//                 return value;\n//             }\n//             super(...args);\n//             Singleton.#instance = new WeakRef(this);\n//         }\n//     };\n// }\nconst defaultKeySelector = (function () {\n    type KeyValue = [string, any];\n    function sortFn([keyA]:KeyValue, [keyB]:KeyValue){\n        return keyA > keyB ? 1 : keyA < keyB ? -1 : 0;\n    }\n    function mapFn([key, val]:KeyValue){\n        return [key, norm(val)] as const;\n    }\n    function norm(val: any): any {\n        if (!val) {\n            return val;\n        }\n        if (Array.isArray(val)) {\n            return val.map(norm);\n        }\n        if (val[Symbol.iterator]) {\n            return norm(Array.from(val));\n        }\n        if (typeof val === 'object') {\n            // check for custom toString (e.g. Date, Function, Symbol, etc)\n            if (val.toString !== Object.prototype.toString) {\n                return val.toString();\n            }\n            // recursively sort and normalize all the properties\n            return Object.fromEntries(\n                Object.entries(val)\n                    .sort(sortFn)\n                    .map(mapFn)\n            );\n        }\n        return val;\n    }\n    return function defaultKeySelector(...args: any[]) {\n        let result: any = norm(args[0]);\n        if (result.length < 2) {\n            result = result[0];\n        }\n        switch (Array.isArray(result) ? 'array' : result.type) {\n            case 'object':\n            case 'array':\n                return JSON.stringify(result);\n            default:\n                return result;\n        }\n    };\n}());\nexport function Singleton<T extends Ctor>(ctor: T, keySelector: Func<ConstructorParameters<T>, any> = defaultKeySelector): T {\n    return class Singleton extends ctor {\n        static #cache: KindaWeakMap<any, Singleton>;\n        static {\n            this.#cache = new KindaWeakMap<any, Singleton>();\n        }\n        constructor(...args: any[]) {\n            const key = keySelector!(...args as ConstructorParameters<T>);\n            const value = Singleton.#cache.get(key);\n            if (value) {\n                return value;\n            }\n            super(...args);\n            Singleton.#cache.set(key, this);\n        }\n    };\n}\n"]}